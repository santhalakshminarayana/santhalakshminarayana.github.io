{"pageProps":{"postsMetaData":[{"metadata":{"title":"Doppalf: RAG powered full-stack AI chatbot like ChatGPT","description":"Build a full-stack RAG-powered AI chatbot like ChatGPT to give LLM your personality with Python, FastAPI, Llamaindex, Cohere, Qdrant, Next.js (Typescript), and Tailwind CSS.","imgName":"doppalf-rag-powered-ai-chatbot/doppalf-rag-powered-ai-chatbot.jpg","date":"May 24, 2024","tags":["python","ai","next-js","react"],"keywords":["python","llm","next-js","llamaindex","tailwind-css","typescript","fastapi","rag","cohere","qdrant","cohere-ai","ai-chatbot","llm","chatbot","chatgpt"],"id":"doppalf-rag-powered-ai-chatbot"}},{"metadata":{"title":"Asynchronous or Concurrency patterns in Python with Asyncio","description":"Effective implementation of asynchronous or concurrency patterns like Background task and Worker Pool in Python using Asyncio.","imgName":"concurrency-patterns-python/concurrency-patterns-python.jpg","date":"Mar 6, 2024","tags":["concurrency","python-performance","python"],"keywords":["concurrency","asyncio","python-concurrency","worker-pool","job-queue","worker-queue","background-thread","background-task","background-job","python-performance","python-optimize","python","fast-python","speed"],"id":"concurrency-patterns-python"}},{"metadata":{"title":"Super fast Python (Part-5): Numba","description":"Speed up Numerical computations and functions in Python with Numba and Numpy.","imgName":"super-fast-python-numba/super-fast-python-numba.jpg","date":"Dec 25, 2022","tags":["python-performance","python"],"keywords":["numba","python-performance","python-optimize","python","fast-python","speed","jit","numba-numpy"],"id":"super-fast-python-numba"}},{"metadata":{"title":"Super fast Python (Part-4): Cython","description":"Convert slow Python code to run as fast as C/C++ using Cython.","imgName":"super-fast-python-cython/super-fast-python-cython.jpg","date":"Nov 18, 2022","tags":["python-performance","python"],"keywords":["cython","python-performance","python-optimize","python","fast-python","speed"],"id":"super-fast-python-cython"}},{"metadata":{"title":"Super fast Python (Part-3): Multi-processing","description":"Make computations in Python faster with Multi-processing .","imgName":"super-fast-python-multi-processing/super-fast-python-multi-processing.jpg","date":"Nov 12, 2022","tags":["python-performance","python"],"keywords":["python-multiprocessing","python-performance","python-optimize","python","fast-python","speed"],"id":"super-fast-python-multi-processing"}},{"metadata":{"title":"Super fast Python (Part-2): Good Practices","description":"Write Python programs by following good practices to run code incredibly faster.","imgName":"super-fast-python-good-practices/super-fast-python-good-practices.jpg","date":"Nov 9, 2022","tags":["python-performance","python"],"keywords":["python-performance","python-optimize","python","fast-python","speed"],"id":"super-fast-python-good-practices"}},{"metadata":{"title":"Super fast Python (Part-1): Why Python is Slow?","description":"Why Python is slow compared to C/C++ or Java? And where can we improve our code to run fast?","imgName":"super-fast-python-why-python-slow/super-fast-python-why-python-slow.jpg","date":"Nov 7, 2022","tags":["python-performance","python"],"keywords":["python-performance","python-optimize","python","fast-python","speed","slow-python"],"id":"super-fast-python-why-python-slow"}},{"metadata":{"title":"Image Enhancement using Retinex Algorithms","description":"Enhance low-light images using Retinex algorithms with Fast Fourier Transform in Python.","imgName":"retinex-image-enhancement/retinex-image-enhancement.jpg","date":"Mar 23, 2022","tags":["ai","image-processing","color-science","opencv","python"],"keywords":["retinex","image-enhance","retinex-image-enhance","image-processing","python","color-correct","color-enhance","color-balance"],"id":"retinex-image-enhancement"}},{"metadata":{"title":"Chromatic adaptation (Color constancy)","description":"Color constancy of an image using Chromatic adaptation technique in Python.","imgName":"chromatic-adaptation/chromatic-adaptation.jpg","date":"Nov 26, 2021","tags":["image-processing","color-science","opencv","python"],"keywords":["color-science","color-constancy","chromatic-adaptation","gray-world","opencv","python"],"id":"chromatic-adaptation"}},{"metadata":{"title":"Whiteboard Image Enhancement using OpenCV","description":"Enhance whiteboard images taken from mobile using OpenCV.","imgName":"whiteboard-enhance/whiteboard-image-enhancement.jpg","date":"Oct 19, 2021","tags":["image-processing","opencv","python"],"keywords":["whiteboard","whiteboard-enhance","image-enhance","image-processing","opencv","python","difference-of-guassian","dog","contrast-stretch","color-balance"],"id":"whiteboard-image-enhancement-opencv-python"}}],"tagName":"python"},"__N_SSG":true}